@model MugStore.Web.Areas.Admin.ViewModels.Home.IndexViewModel
@{
    ViewBag.Title = "Mug3 Admin";
}
@using MugStore.Data.Models;

<div class="row">
    <div class="col-md-4">
        <h3>Summary</h3>
        <ul class="list-group">
            @{
                var newCount = Model.Orders.Count(o => (o.ConfirmationStatus == ConfirmationStatus.Pending || o.ConfirmationStatus == ConfirmationStatus.Confirmed) && o.OrderStatus == OrderStatus.InProgress);
            }
            <li class="list-group-item@(newCount > 0 ? " list-group-item-warning" : "")">
                <span class="tag tag-default tag-pill pull-xs-right">@newCount</span>
                <h6 class="list-group-item-heading">Orders new</h6>
                <p class="list-group-item-text">Pending or confirmed and in progress</p>
            </li>
            @{
                var sentCount = Model.Orders.Count(o => o.OrderStatus == OrderStatus.Sent);
            }
            <li class="list-group-item@(sentCount > 0 ? " list-group-item-info" : "")">
                <span class="tag tag-default tag-pill pull-xs-right">@sentCount</span>
                <h6 class="list-group-item-heading">Orders sent</h6>
                <p class="list-group-item-text">Sent</p>
            </li>
            <li class="list-group-item">
                <span class="tag tag-default tag-pill pull-xs-right">@Model.Orders.Count(o => o.OrderStatus == OrderStatus.Finalized)</span>
                <h6 class="list-group-item-heading">Orders finalized</h6>
                <p class="list-group-item-text">Finalized</p>
            </li>
            <li class="list-group-item">
                <span class="tag tag-default tag-pill pull-xs-right">@Model.Orders.Count(o => o.OrderStatus == OrderStatus.DeniedOnDelivery || o.OrderStatus == OrderStatus.Refunded || o.OrderStatus == OrderStatus.Returned)</span>
                <h6 class="list-group-item-heading">Orders returned</h6>
                <p class="list-group-item-text">Denied on delivery, refunded, returned</p>
            </li>
            <li class="list-group-item">
                <span class="tag tag-default tag-pill pull-xs-right">@Model.ImagesCount</span>
                <h6 class="list-group-item-heading">Uploaded images</h6>
            </li>
            <li class="list-group-item">
                <span class="tag tag-default tag-pill pull-xs-right">@Model.Bulletin.Count()</span>
                <h6 class="list-group-item-heading">Emails for bulletin</h6>
            </li>
        </ul>
    </div>

    <div class="col-md-7 offset-md-1">
        <h3>Prices</h3>
        <canvas id="priceChart" data-labels="@Html.Raw(string.Join(", ", Model.PriceChartOrders.Select(x => $"{x.CreatedOn.ToString("dd MMM yy")}")))" data-price-customer="@Html.Raw(string.Join(", ", Model.PriceChartOrders.Select(x => x.PriceCustomer.ToString("0.00", System.Globalization.CultureInfo.InvariantCulture))))" data-price-supplier="@Html.Raw(string.Join(", ", Model.PriceChartOrders.Select(x => x.PriceSupplier.ToString("0.00", System.Globalization.CultureInfo.InvariantCulture))))"></canvas>
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <h3 id="feedback-section" data-url-status="@Url.Action("FeedbackStatus")" data-url-delete="@Url.Action("FeedbackDelete")">Feedback</h3>
        <ul class="list-group" id="feedback-container">
            @foreach (var feedback in Model.Feedbacks)
            {
                <li class="list-group-item@(feedback.IsNew ? " list-group-item-warning" : "")">
                    @if (feedback.IsNew)
                    {
                        <span class="tag tag-default tag-pill pull-xs-right"><a href="#" title="Mark as seen" data-id="@feedback.Id" class="feedback-status">!</a></span>
                    }

                    <span class="tag tag-default tag-pill pull-xs-right"><a href="#" title="Delete" data-id="@feedback.Id" class="feedback-delete">X</a></span>
                    <h6 class="list-group-item-heading">From: @feedback.Name<br>Email: @feedback.Email</h6>
                    <p class="list-group-item-text">@feedback.Text</p>
                </li>
            }
        </ul>
    </div>

    <div class="col-md-6">
        <h3>Site Log</h3>
        <ul class="nav nav-tabs">
            <li class="nav-item">
                <a class="nav-link active" href="#" id="log-500">500</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="#" id="log-400">400</a>
            </li>
        </ul>
        <ul class="list-group" id="log-container-500">
            @foreach (var log in Model.LogErrorMessages)
            {
                <li class="list-group-item">
                    @if (log.Code != null)
                    {
                        <span class="tag tag-default tag-pill pull-xs-right">@log.Code</span>
                    }

                    <p class="list-group-item-text">@log.CreatedOn.ToString("dd.MM.yyyy; HH:mm") - @log.Level.ToString() - @log.IpAddress - @log.Content</p>
                </li>
            }
        </ul>
        <ul class="list-group" id="log-container-400">
            @foreach (var log in Model.LogNotFoundMessages)
            {
                <li class="list-group-item">
                    @if (log.Code != null)
                    {
                        <span class="tag tag-default tag-pill pull-xs-right">@log.Code</span>
                    }

                    <p class="list-group-item-text">@log.CreatedOn.ToString("dd.MM.yyyy; HH:mm") - @log.Level.ToString() - @log.IpAddress - @log.Content</p>
                </li>
            }
        </ul>
    </div>
</div>

<div class="row">
    <div class="col-md-5">
        <h3>Orders' stats</h3>
        <ul class="list-group">
            <li class="list-group-item">
                <form action="@Url.Action("index", "home")" method="get">
                    <div class="row">
                        <div class="col-md-5">
                            <fieldset class="form-group">
                                <input type="date" class="form-control" name="from" value="@Model.StatsFrom.ToString("yyyy-MM-dd")">
                            </fieldset>
                        </div>
                        <div class="col-md-5">
                            <fieldset class="form-group">
                                <input type="date" class="form-control" name="to" value="@Model.StatsTo.ToString("yyyy-MM-dd")">
                            </fieldset>
                        </div>
                        <div class="col-md-2">
                            <fieldset class="form-group">
                                <input type="submit" class="btn btn-secondary" value="Go">
                            </fieldset>
                        </div>
                    </div>
                </form>
            </li>
            @{
                var filteredByDateOrders = Model.Orders.Where(x => x.CreatedOn >= Model.StatsFrom && x.CreatedOn <= Model.StatsTo && x.OrderStatus == OrderStatus.Finalized).ToList();
            }
            <li class="list-group-item">
                <span class="tag tag-default tag-pill pull-xs-right">@filteredByDateOrders.Count</span>
                <h6 class="list-group-item-heading">Orders</h6>
            </li>
            <li class="list-group-item">
                <span class="tag tag-default tag-pill pull-xs-right">@filteredByDateOrders.Sum(x => x.Quantity)</span>
                <h6 class="list-group-item-heading">Mugs</h6>
            </li>
            <li class="list-group-item">
                <span class="tag tag-default tag-pill pull-xs-right">@filteredByDateOrders.Where(x => x.Color == "std").Sum(x => x.Quantity)</span>
                <h6 class="list-group-item-heading">Std</h6>
            </li>
            <li class="list-group-item">
                <span class="tag tag-default tag-pill pull-xs-right">@filteredByDateOrders.Where(x => x.Color == "yellow").Sum(x => x.Quantity)</span>
                <h6 class="list-group-item-heading">Yellow</h6>
            </li>
            <li class="list-group-item">
                <span class="tag tag-default tag-pill pull-xs-right">@filteredByDateOrders.Where(x => x.Color == "red").Sum(x => x.Quantity)</span>
                <h6 class="list-group-item-heading">Red</h6>
            </li>
        </ul>
    </div>

    <div class="col-md-6 offset-md-1">
    </div>
</div>

@section scripts {
    <script src="~/admin/js/index.js"></script>
}